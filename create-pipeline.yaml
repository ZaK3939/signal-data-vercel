name: optimism-sepolia-cred-trade-events
apiVersion: 3
sources:
  optimism_sepolia_raw_logs:
    dataset_name: optimism_sepolia.raw_logs
    version: 1.0.0
    type: dataset
    start_at: earliest
transforms:
  cred_decoded:
    primary_key: id
    sql: >
      SELECT 
        `id`,
        _gs_evm_decode(
            _gs_fetch_abi('https://api-sepolia-optimism.etherscan.io/api?module=contract&action=getabi&address=0x3AB39ec06F5BDe998602Ae1170875C0A10587523', 'etherscan'), 
            `topics`, 
            `data`
        ) AS `decoded`, 
        block_number,
        block_timestamp,
        transaction_hash 
      FROM optimism_sepolia_raw_logs
      WHERE address = lower('0xba45F4B673b1E7800878FEf7381c6Ce9A0E6B125')
  cred_clean:
    primary_key: id
    sql: >
      SELECT 
        `id`, 
        decoded.event_params AS `event_params`, 
        decoded.event_params[1] AS `trader`, 
        CAST(decoded.event_params[2] AS INTEGER) AS `credId`, 
        CAST(decoded.event_params[3] AS BOOLEAN) AS `isBuy`, 
        CAST(decoded.event_params[4] AS NUMERIC) AS `amount`, 
        CAST(decoded.event_params[5] AS NUMERIC) AS `ethvalue`, 
        CAST(decoded.event_params[6] AS NUMERIC) AS `protocolEthAmount`, 
        CAST(decoded.event_params[7] AS NUMERIC) AS `supply`, 
        decoded.event_signature AS `event_signature`,
        'optimism-sepolia' AS `chain`,
        block_number,
        block_timestamp,
        transaction_hash
      FROM cred_decoded 
      WHERE decoded IS NOT NULL
      AND decoded.event_signature = 'Trade'
sinks:
  postgres_optimism_sepolia_cred_events:
    type: postgres
    table: optimism_sepolia_cred_data
    schema: public
    secret_name: JDBC_SECRET_CLXZX7Y380
    description: 'Postgres sink for: Optimism Sepolia Cred contract events'
    from: cred_clean
